;; Analyzed by ClojureScript 1.7.145
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name peli.time-debugger, :imports nil, :requires {cljs.core.async cljs.core.async, reagent reagent.core, reagent.core reagent.core}, :uses {timeout cljs.core.async, atom reagent.core, chan cljs.core.async, cursor reagent.core, put! cljs.core.async}, :defs {set-time {:protocol-inline nil, :meta {:file "/Users/ckirkendall/Development/clojure/peli/src/peli/time_debugger.cljs", :line 85, :column 7, :end-line 85, :end-column 15, :arglists (quote ([state-atm adaptor idx]))}, :name peli.time-debugger/set-time, :variadic false, :file "src/peli/time_debugger.cljs", :end-column 15, :method-params ([state-atm adaptor idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state-atm adaptor idx]))}, gather-events {:protocol-inline nil, :meta {:file "/Users/ckirkendall/Development/clojure/peli/src/peli/time_debugger.cljs", :line 46, :column 8, :end-line 46, :end-column 21, :private true, :arglists (quote ([dch state adaptor]))}, :private true, :name peli.time-debugger/gather-events, :variadic false, :file "src/peli/time_debugger.cljs", :end-column 21, :method-params ([dch state adaptor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 3, :fn-var true, :arglists (quote ([dch state adaptor]))}, -init-debugger-state {:protocol-inline nil, :meta {:file "/Users/ckirkendall/Development/clojure/peli/src/peli/time_debugger.cljs", :line 15, :column 4, :end-line 15, :end-column 24, :protocol peli.time-debugger/IDebugAdaptor, :doc nil, :arglists (quote ([this defaults]))}, :protocol peli.time-debugger/IDebugAdaptor, :name peli.time-debugger/-init-debugger-state, :variadic false, :file "src/peli/time_debugger.cljs", :end-column 24, :method-params ([this defaults]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this defaults])), :doc nil}, init-debugger {:protocol-inline nil, :meta {:file "/Users/ckirkendall/Development/clojure/peli/src/peli/time_debugger.cljs", :line 159, :column 7, :end-line 159, :end-column 20, :arglists (quote ([dch adaptor target-id opts]))}, :name peli.time-debugger/init-debugger, :variadic false, :file "src/peli/time_debugger.cljs", :end-column 20, :method-params ([dch adaptor target-id opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 159, :end-line 159, :max-fixed-arity 4, :fn-var true, :arglists (quote ([dch adaptor target-id opts]))}, reset-state! {:protocol-inline nil, :meta {:file "/Users/ckirkendall/Development/clojure/peli/src/peli/time_debugger.cljs", :line 23, :column 7, :end-line 23, :end-column 19, :arglists (quote ([adaptor event]))}, :name peli.time-debugger/reset-state!, :variadic false, :file "src/peli/time_debugger.cljs", :end-column 19, :method-params ([adaptor event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([adaptor event]))}, find-events {:protocol-inline nil, :meta {:file "/Users/ckirkendall/Development/clojure/peli/src/peli/time_debugger.cljs", :line 69, :column 8, :end-line 69, :end-column 19, :private true, :arglists (quote ([queue idx]))}, :private true, :name peli.time-debugger/find-events, :variadic false, :file "src/peli/time_debugger.cljs", :end-column 19, :method-params ([queue idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([queue idx]))}, transform {:protocol-inline nil, :meta {:file "/Users/ckirkendall/Development/clojure/peli/src/peli/time_debugger.cljs", :line 17, :column 7, :end-line 17, :end-column 16, :arglists (quote ([adaptor event]))}, :name peli.time-debugger/transform, :variadic false, :file "src/peli/time_debugger.cljs", :end-column 16, :method-params ([adaptor event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([adaptor event]))}, event->idx {:protocol-inline nil, :meta {:file "/Users/ckirkendall/Development/clojure/peli/src/peli/time_debugger.cljs", :line 77, :column 8, :end-line 77, :end-column 18, :private true, :arglists (quote ([state event]))}, :private true, :name peli.time-debugger/event->idx, :variadic false, :file "src/peli/time_debugger.cljs", :end-column 18, :method-params ([state event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state event]))}, -display {:protocol-inline nil, :meta {:file "/Users/ckirkendall/Development/clojure/peli/src/peli/time_debugger.cljs", :line 13, :column 4, :end-line 13, :end-column 12, :protocol peli.time-debugger/IDebugAdaptor, :doc nil, :arglists (quote ([this prev-event cur-event]))}, :protocol peli.time-debugger/IDebugAdaptor, :name peli.time-debugger/-display, :variadic false, :file "src/peli/time_debugger.cljs", :end-column 12, :method-params ([this prev-event cur-event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 13, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this prev-event cur-event])), :doc nil}, init-debugger-state {:protocol-inline nil, :meta {:file "/Users/ckirkendall/Development/clojure/peli/src/peli/time_debugger.cljs", :line 26, :column 7, :end-line 26, :end-column 26, :arglists (quote ([adaptor defaults]))}, :name peli.time-debugger/init-debugger-state, :variadic false, :file "src/peli/time_debugger.cljs", :end-column 26, :method-params ([adaptor defaults]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([adaptor defaults]))}, start-record {:protocol-inline nil, :meta {:file "/Users/ckirkendall/Development/clojure/peli/src/peli/time_debugger.cljs", :line 116, :column 7, :end-line 116, :end-column 19, :arglists (quote ([state]))}, :name peli.time-debugger/start-record, :variadic false, :file "src/peli/time_debugger.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, prev-e {:protocol-inline nil, :meta {:file "/Users/ckirkendall/Development/clojure/peli/src/peli/time_debugger.cljs", :line 94, :column 8, :end-line 94, :end-column 14, :private true, :arglists (quote ([state-atm adaptor event]))}, :private true, :name peli.time-debugger/prev-e, :variadic false, :file "src/peli/time_debugger.cljs", :end-column 14, :method-params ([state-atm adaptor event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state-atm adaptor event]))}, cleanup-queue {:protocol-inline nil, :meta {:file "/Users/ckirkendall/Development/clojure/peli/src/peli/time_debugger.cljs", :line 33, :column 8, :end-line 33, :end-column 21, :private true, :arglists (quote ([state interval lookback]))}, :private true, :name peli.time-debugger/cleanup-queue, :variadic false, :file "src/peli/time_debugger.cljs", :end-column 21, :method-params ([state interval lookback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state interval lookback]))}, renderer {:protocol-inline nil, :meta {:file "/Users/ckirkendall/Development/clojure/peli/src/peli/time_debugger.cljs", :line 131, :column 8, :end-line 131, :end-column 16, :private true, :arglists (quote ([state adaptor]))}, :private true, :name peli.time-debugger/renderer, :variadic false, :file "src/peli/time_debugger.cljs", :end-column 16, :method-params ([state adaptor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state adaptor]))}, start-debug {:protocol-inline nil, :meta {:file "/Users/ckirkendall/Development/clojure/peli/src/peli/time_debugger.cljs", :line 124, :column 7, :end-line 124, :end-column 18, :arglists (quote ([state]))}, :name peli.time-debugger/start-debug, :variadic false, :file "src/peli/time_debugger.cljs", :end-column 18, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, next-e {:protocol-inline nil, :meta {:file "/Users/ckirkendall/Development/clojure/peli/src/peli/time_debugger.cljs", :line 103, :column 8, :end-line 103, :end-column 14, :private true, :arglists (quote ([state-atm adaptor event]))}, :private true, :name peli.time-debugger/next-e, :variadic false, :file "src/peli/time_debugger.cljs", :end-column 14, :method-params ([state-atm adaptor event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state-atm adaptor event]))}, -reset-state! {:protocol-inline nil, :meta {:file "/Users/ckirkendall/Development/clojure/peli/src/peli/time_debugger.cljs", :line 14, :column 4, :end-line 14, :end-column 17, :protocol peli.time-debugger/IDebugAdaptor, :doc nil, :arglists (quote ([this event]))}, :protocol peli.time-debugger/IDebugAdaptor, :name peli.time-debugger/-reset-state!, :variadic false, :file "src/peli/time_debugger.cljs", :end-column 17, :method-params ([this event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this event])), :doc nil}, IDebugAdaptor {:meta {:file "/Users/ckirkendall/Development/clojure/peli/src/peli/time_debugger.cljs", :line 11, :column 14, :end-line 11, :end-column 27, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-transform [[this event]], -display [[this prev-event cur-event]], -reset-state! [[this event]], -init-debugger-state [[this defaults]]}}}, :protocol-symbol true, :name peli.time-debugger/IDebugAdaptor, :file "src/peli/time_debugger.cljs", :end-column 27, :column 1, :line 11, :protocol-info {:methods {-transform [[this event]], -display [[this prev-event cur-event]], -reset-state! [[this event]], -init-debugger-state [[this defaults]]}}, :info nil, :end-line 11, :impls #{}, :doc nil, :jsdoc ("@interface")}, -transform {:protocol-inline nil, :meta {:file "/Users/ckirkendall/Development/clojure/peli/src/peli/time_debugger.cljs", :line 12, :column 4, :end-line 12, :end-column 14, :protocol peli.time-debugger/IDebugAdaptor, :doc nil, :arglists (quote ([this event]))}, :protocol peli.time-debugger/IDebugAdaptor, :name peli.time-debugger/-transform, :variadic false, :file "src/peli/time_debugger.cljs", :end-column 14, :method-params ([this event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this event])), :doc nil}, display {:protocol-inline nil, :meta {:file "/Users/ckirkendall/Development/clojure/peli/src/peli/time_debugger.cljs", :line 20, :column 7, :end-line 20, :end-column 14, :arglists (quote ([adaptor prev-event cur-event]))}, :name peli.time-debugger/display, :variadic false, :file "src/peli/time_debugger.cljs", :end-column 14, :method-params ([adaptor prev-event cur-event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 3, :fn-var true, :arglists (quote ([adaptor prev-event cur-event]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:min :cur-event :else :button :queue :float :value :time :mode :recur :type :debug :on-click :prev-event :style :div :event :hidden :max :id :record :right :input :cleanup-interval :on-change :min-time :lookback :range :span :max-time}, :order [:recur :mode :debug :queue :else :record :time :event :cur-event :prev-event :hidden :min-time :max-time :div :id :button :on-click :span :input :type :style :min :max :value :on-change :range :float :right :cleanup-interval :lookback]}, :doc nil}